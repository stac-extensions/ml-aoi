[bumpversion]
current_version = 0.1.0
commit = True
tag = True
tag_name = v{new_version}

[bumpversion:file:CHANGELOG.md]
search = 
	[Unreleased](https://github.com/stac-extensions/ml-aoi/compare/v{current_version}...HEAD) (latest)
	---------------------------------------------------------------------------------------
replace = 
	[Unreleased](https://github.com/stac-extensions/ml-aoi/compare/v{new_version}...HEAD) (latest)
	---------------------------------------------------------------------------------------

	### Added
	- n/a

	### Changes
	- n/a

	### Deprecated
	- n/a

	### Removed
	- n/a

	### Fixed
	- n/a
	
	.. _changes_{new_version}:
	
	[v{new_version}](https://github.com/stac-extensions/ml-aoi/tree/{new_version}) ({now:%%Y-%%m-%%d})
	========================================================================

[bumpversion:file:README.md]
search = {current_version}
replace = {new_version}

[bumpversion:file:setup.py]
search = VERSION = "{current_version}"
replace = VERSION = "{new_version}"

[bumpversion:file:pystac_ml_aoi/__init__.py]
search = __version__ = "{current_version}"
replace = __version__ = "{new_version}"

[bumpversion:file:Makefile]
search = APP_VERSION ?= {current_version}
replace = APP_VERSION ?= {new_version}

[bumpversion:glob:examples/*.json]
search = ml-aoi/v{current_version}
replace = ml-aoi/v{new_version}

[bumpversion:glob:examples/*.geojson]
search = ml-aoi/v{current_version}
replace = ml-aoi/v{new_version}

[bumpversion:glob:json-schema/*.json]
search = ml-aoi/v{current_version}
replace = ml-aoi/v{new_version}

[tool:pytest]
addopts = 
	--strict-markers
	--tb=native
	--ignore=tests/smoke
	pystac_ml_aoi/
log_cli = false
log_level = DEBUG
python_files = test_*.py
markers =
	functional: mark test as functionality validation
filterwarnings =
	ignore:.*iana\.org.*:urllib3.exceptions.InsecureRequestWarning

[isort]
line_length = 120
multi_line_output = 3
lines_between_types = 0
lines_between_sections = 1
combine_as_imports = true
order_by_type = true
classes = CWL,JSON,KVP,IO
treat_all_comments_as_code = true
default_section = THIRDPARTY
sections = FUTURE,STDLIB,THIRDPARTY,FIRSTPARTY,LOCALFOLDER
extra_standard_library = posixpath,typing,typing_extensions
known_third_party = cornice_swagger,cwltool,cwt,docker,mock
known_first_party = pystac_ml_aoi,tests
skip = *.egg*,build,env,src,venv,reports,node_modules

[bandit]
skips = B101,B320,B410
exclude = *.egg-info,./build,./dist,./env,./tests,test_*
targets = .

[flake8]
ignore = E126,E226,E402,F401,W503,W504,B007,B009,B010,B023
max-line-length = 120
exclude = 
	src,
	.git,
	__pycache__,
	docs,
	build,
	dist,
	eggs,
	env,
	parts,
	examples,
	node_modules,

[doc8]
max-line-length = 120
ignore-path = docs/build,docs/source/autoapi

[docformatter]
recursive = true
wrap-descriptions = 0
wrap-summaries = 120
make-summary-multi-line = True
pre-summary-newline = True

[pydocstyle]
add_ignore = D100,D101,D102,D103,D104,D105,D107,D200,D202,D204,D212,D401
add_select = D201,D213

[pylint]

[coverage:run]
branch = true
source = ./
include = pystac_ml_aoi/*
omit = 
	setup.py
	docs/*
	tests/*
	*_mako

[coverage:report]
exclude_lines = 
	pragma: no cover
	raise OSError
	raise AssertionError
	raise NotImplementedError
	if TYPE_CHECKING:
	if __name__ == "__main__":
	LOGGER.debug
	LOGGER.info
	LOGGER.warning
	LOGGER.error
	LOGGER.exception
	LOGGER.log
	self.logger.debug
	self.logger.info
	self.logger.warning
	self.logger.error
	self.logger.exception
	self.logger.log
	@overload
	if not result.success:
	raise PackageAuthenticationError
	raise PackageExecutionError
	raise PackageNotFound
	raise PackageParsingError
	raise PackageRegistrationError
	raise PackageTypeError
